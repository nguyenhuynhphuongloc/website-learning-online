import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import * as cookieParser from 'cookie-parser';
import * as path from 'path';
import { NestExpressApplication } from '@nestjs/platform-express';
async function bootstrap() {
  const app = await NestFactory.create<NestExpressApplication>(AppModule, {
    cors: {
      origin: 'http://localhost:3000', // Cho ph√©p domain n√†y truy c·∫≠p
      methods: 'GET,POST,PUT,DELETE', // C·∫•u h√¨nh c√°c ph∆∞∆°ng th·ª©c HTTP
      allowedHeaders: 'Content-Type, Authorization', // C·∫•u h√¨nh headers
      credentials: true, // N·∫øu c·∫ßn g·ª≠i cookie trong y√™u c·∫ßu
    },
  });

  // S·ª≠ d·ª•ng global validation pipe cho t·∫•t c·∫£ c√°c request
  app.useGlobalPipes(new ValidationPipe({ whitelist: true }));

  app.use(cookieParser());

  app.enableCors({
    origin: ['http://localhost:3000', 'http://localhost:3001'], // Th√™m t·∫•t c·∫£ c√°c frontend ƒë∆∞·ª£c ph√©p
    credentials: true, // n·∫øu d√πng cookie, authorization header
  });

  app.useStaticAssets(path.join(__dirname, '..', 'public'));


  // Ki·ªÉm tra c·ªïng t·ª´ bi·∫øn m√¥i tr∆∞·ªùng, n·∫øu kh√¥ng c√≥ th√¨ d√πng 3000
  const port = process.env.PORT || 5001;
  console.log(`Server running on port ${port}`);

  // Kh·ªüi ƒë·ªông server
  await app.listen(port);
  console.log(`üöÄ Server started on port ${port}`);
}
bootstrap();
